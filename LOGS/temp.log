
15:02:03.954 DEBUG o.s.w.s.r.ResourceUrlProvider -   Looking for resource handler mappings
15:02:03.957 DEBUG o.s.w.s.r.ResourceUrlProvider -   Found resource handler mapping: URL pattern="/**/favicon.ico", locations=[ServletContext resource [/], class path resource [META-INF/resources/], class path resource [resources/], class path resource [static/], class path resource [public/], class path resource []], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@305094a7]
15:02:03.957 DEBUG o.s.w.s.r.ResourceUrlProvider -   Found resource handler mapping: URL pattern="/webjars/**", locations=[class path resource [META-INF/resources/webjars/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@1fb2d4de]
15:02:03.957 DEBUG o.s.w.s.r.ResourceUrlProvider -   Found resource handler mapping: URL pattern="/**", locations=[ServletContext resource [/], class path resource [META-INF/resources/], class path resource [resources/], class path resource [static/], class path resource [public/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@84ce808]
15:02:04.049 DEBUG o.s.w.c.s.StandardServletEnvironment -   Adding PropertySource 'server.ports' with highest search precedence
15:02:04.068 INFO  c.v.c.d.App -   Started App in 47.821 seconds (JVM running for 48.989)

%{TIME:log_time} %{LOGLEVEL:log_level} %{DATA:class_name} %{GREEDYDATA :threadName}

### Provide the input file path pattern
### Configure path, type and sincedb_path as per the application configuration

input {
    file {
        path => ["C:/Users/madika8/Desktop/LOCAL_LOGS///*.log"]
        type => "applog"
        tags => "applog"
    }
}

filter {
	if [type] == "applog" {
		grok {
        	match => { "message" => "%{TIME:log_time} %{LOGLEVEL:log_level} %{DATA:class_name} %{GREEDYDATA :threadName}"}
    	}
    	add_field => {
	      "app_environment" => "local-cloud"          ### change this to prod for PROD env
	      "dc" => "local"                              ### change this to prod for PROD env
	      "backend" => "spring-boot"
    	}

	}
}

### Provide appropriate value for application kafka topic ID and comma separated list of kafka servers below.
### Make sure jaas and kerberos file path are valid.

output {
    stdout {}
    file {
        path => "C:/Users/madika8/Desktop/OUTPUT_LOGS/output.txt"
    }
}


